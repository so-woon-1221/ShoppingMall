{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as itemsAPI from '../lib/api/items';\nimport { takeLatest } from 'redux-saga/effects';\nconst INITIALIZE = 'items/INITIALIZE';\nconst CHANGE_FIELD = 'items/CHANGE_FIELD';\nconst [INPUT_ITEMS, INPUT_ITEMS_SUCCESS, INPUT_ITEMS_FAILURE] = createRequestActionTypes('items/INPUT_ITEMS');\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, ({\n  key,\n  value\n}) => ({\n  key,\n  value\n}));\nexport const inputItem = createAction(INPUT_ITEMS, ({\n  name,\n  content,\n  price\n}) => ({\n  name,\n  content,\n  price\n}));\nconst inputItemsSaga = createRequestSaga(INPUT_ITEMS, itemsAPI.inputItems);\nexport function* inputSaga() {\n  yield takeLatest(INPUT_ITEMS, inputItemsSaga);\n  console.log('click3');\n}\nconst initialState = {\n  name: '',\n  content: '',\n  price: '',\n  tags: [],\n  input: null,\n  inputError: null\n};\nconst items = handleActions({\n  [INITIALIZE]: state => initialState,\n  [CHANGE_FIELD]: (state, {\n    payload: {\n      key,\n      value\n    }\n  }) => ({ ...state,\n    [key]: value\n  }),\n  [INPUT_ITEMS]: state => ({ ...state,\n    input: null,\n    inputError: null\n  }),\n  [INPUT_ITEMS_SUCCESS]: (state, {\n    payload: items\n  }) => ({ ...state,\n    items\n  }),\n  [INPUT_ITEMS_FAILURE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  })\n}, initialState);\nexport default items;","map":{"version":3,"sources":["/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/modules/items.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","itemsAPI","takeLatest","INITIALIZE","CHANGE_FIELD","INPUT_ITEMS","INPUT_ITEMS_SUCCESS","INPUT_ITEMS_FAILURE","initialize","changeField","key","value","inputItem","name","content","price","inputItemsSaga","inputItems","inputSaga","console","log","initialState","tags","input","inputError","items","state","payload","error"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAMC,UAAU,GAAG,kBAAnB;AACA,MAAMC,YAAY,GAAG,oBAArB;AACA,MAAM,CACJC,WADI,EAEJC,mBAFI,EAGJC,mBAHI,IAIFP,wBAAwB,CAAC,mBAAD,CAJ5B;AAMA,OAAO,MAAMQ,UAAU,GAAGX,YAAY,CAACM,UAAD,CAA/B;AACP,OAAO,MAAMM,WAAW,GAAGZ,YAAY,CAACO,YAAD,EAAe,CAAC;AAAEM,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,MAAqB;AACzED,EAAAA,GADyE;AAEzEC,EAAAA;AAFyE,CAArB,CAAf,CAAhC;AAIP,OAAO,MAAMC,SAAS,GAAGf,YAAY,CACnCQ,WADmC,EAEnC,CAAC;AAAEQ,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,MAA+B;AAC7BF,EAAAA,IAD6B;AAE7BC,EAAAA,OAF6B;AAG7BC,EAAAA;AAH6B,CAA/B,CAFmC,CAA9B;AASP,MAAMC,cAAc,GAAGjB,iBAAiB,CAACM,WAAD,EAAcJ,QAAQ,CAACgB,UAAvB,CAAxC;AACA,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAMhB,UAAU,CAACG,WAAD,EAAcW,cAAd,CAAhB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AAED,MAAMC,YAAY,GAAG;AACnBR,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBO,EAAAA,IAAI,EAAE,EAJa;AAKnBC,EAAAA,KAAK,EAAE,IALY;AAMnBC,EAAAA,UAAU,EAAE;AANO,CAArB;AASA,MAAMC,KAAK,GAAG3B,aAAa,CACzB;AACE,GAACK,UAAD,GAAeuB,KAAD,IAAWL,YAD3B;AAEE,GAACjB,YAAD,GAAgB,CAACsB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAEjB,MAAAA,GAAF;AAAOC,MAAAA;AAAP;AAAX,GAAR,MAAyC,EACvD,GAAGe,KADoD;AAEvD,KAAChB,GAAD,GAAOC;AAFgD,GAAzC,CAFlB;AAME,GAACN,WAAD,GAAgBqB,KAAD,KAAY,EACzB,GAAGA,KADsB;AAEzBH,IAAAA,KAAK,EAAE,IAFkB;AAGzBC,IAAAA,UAAU,EAAE;AAHa,GAAZ,CANjB;AAWE,GAAClB,mBAAD,GAAuB,CAACoB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,MAAgC,EACrD,GAAGC,KADkD;AAErDD,IAAAA;AAFqD,GAAhC,CAXzB;AAeE,GAAClB,mBAAD,GAAuB,CAACmB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAR,MAAgC,EACrD,GAAGF,KADkD;AAErDE,IAAAA;AAFqD,GAAhC;AAfzB,CADyB,EAqBzBP,YArByB,CAA3B;AAwBA,eAAeI,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as itemsAPI from '../lib/api/items';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'items/INITIALIZE';\nconst CHANGE_FIELD = 'items/CHANGE_FIELD';\nconst [\n  INPUT_ITEMS,\n  INPUT_ITEMS_SUCCESS,\n  INPUT_ITEMS_FAILURE,\n] = createRequestActionTypes('items/INPUT_ITEMS');\n\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\n  key,\n  value,\n}));\nexport const inputItem = createAction(\n  INPUT_ITEMS,\n  ({ name, content, price }) => ({\n    name,\n    content,\n    price,\n  }),\n);\n\nconst inputItemsSaga = createRequestSaga(INPUT_ITEMS, itemsAPI.inputItems);\nexport function* inputSaga() {\n  yield takeLatest(INPUT_ITEMS, inputItemsSaga);\n  console.log('click3');\n}\n\nconst initialState = {\n  name: '',\n  content: '',\n  price: '',\n  tags: [],\n  input: null,\n  inputError: null,\n};\n\nconst items = handleActions(\n  {\n    [INITIALIZE]: (state) => initialState,\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\n      ...state,\n      [key]: value,\n    }),\n    [INPUT_ITEMS]: (state) => ({\n      ...state,\n      input: null,\n      inputError: null,\n    }),\n    [INPUT_ITEMS_SUCCESS]: (state, { payload: items }) => ({\n      ...state,\n      items,\n    }),\n    [INPUT_ITEMS_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState,\n);\n\nexport default items;\n"]},"metadata":{},"sourceType":"module"}