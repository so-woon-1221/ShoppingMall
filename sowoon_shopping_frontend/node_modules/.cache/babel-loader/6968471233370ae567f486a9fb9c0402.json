{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as itemAPI from '../lib/api/items';\nimport { takeLatest } from 'redux-saga/effects';\nconst [LIST_ITEMS, LIST_ITEMS_SUCCESS, LIST_ITEMS_FAILURE] = createRequestActionTypes('list/LIST_ITEMS');\nconst UNLOAD_LIST = 'list/UNLOAD_LIST';\nexport const listItems = createAction(LIST_ITEMS);\nexport const unloadItems = createAction(UNLOAD_LIST);\nconst listItemsSaga = createRequestSaga(LIST_ITEMS, itemAPI.listItem);\nexport function* listSaga() {\n  yield takeLatest(LIST_ITEMS, listItemsSaga);\n}\nconst initialState = {\n  items: null,\n  error: null\n};\nconst items = handleActions({\n  [LIST_ITEMS_SUCCESS]: (state, {\n    payload: items\n  }) => ({ ...state,\n    items\n  }),\n  [LIST_ITEMS_FAILURE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  }),\n  [UNLOAD_LIST]: () => initialState\n}, initialState);\nexport default items;","map":{"version":3,"sources":["/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/modules/list.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","itemAPI","takeLatest","LIST_ITEMS","LIST_ITEMS_SUCCESS","LIST_ITEMS_FAILURE","UNLOAD_LIST","listItems","unloadItems","listItemsSaga","listItem","listSaga","initialState","items","error","state","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAM,CACJC,UADI,EAEJC,kBAFI,EAGJC,kBAHI,IAIFL,wBAAwB,CAAC,iBAAD,CAJ5B;AAKA,MAAMM,WAAW,GAAG,kBAApB;AAEA,OAAO,MAAMC,SAAS,GAAGV,YAAY,CAACM,UAAD,CAA9B;AACP,OAAO,MAAMK,WAAW,GAAGX,YAAY,CAACS,WAAD,CAAhC;AAEP,MAAMG,aAAa,GAAGV,iBAAiB,CAACI,UAAD,EAAaF,OAAO,CAACS,QAArB,CAAvC;AACA,OAAO,UAAUC,QAAV,GAAqB;AAC1B,QAAMT,UAAU,CAACC,UAAD,EAAaM,aAAb,CAAhB;AACD;AAED,MAAMG,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMD,KAAK,GAAGf,aAAa,CACzB;AACE,GAACM,kBAAD,GAAsB,CAACW,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,MAAgC,EACpD,GAAGE,KADiD;AAEpDF,IAAAA;AAFoD,GAAhC,CADxB;AAKE,GAACR,kBAAD,GAAsB,CAACU,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,MAAgC,EAAE,GAAGC,KAAL;AAAYD,IAAAA;AAAZ,GAAhC,CALxB;AAME,GAACR,WAAD,GAAe,MAAMM;AANvB,CADyB,EASzBA,YATyB,CAA3B;AAYA,eAAeC,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as itemAPI from '../lib/api/items';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  LIST_ITEMS,\n  LIST_ITEMS_SUCCESS,\n  LIST_ITEMS_FAILURE,\n] = createRequestActionTypes('list/LIST_ITEMS');\nconst UNLOAD_LIST = 'list/UNLOAD_LIST';\n\nexport const listItems = createAction(LIST_ITEMS);\nexport const unloadItems = createAction(UNLOAD_LIST);\n\nconst listItemsSaga = createRequestSaga(LIST_ITEMS, itemAPI.listItem);\nexport function* listSaga() {\n  yield takeLatest(LIST_ITEMS, listItemsSaga);\n}\n\nconst initialState = {\n  items: null,\n  error: null,\n};\n\nconst items = handleActions(\n  {\n    [LIST_ITEMS_SUCCESS]: (state, { payload: items }) => ({\n      ...state,\n      items,\n    }),\n    [LIST_ITEMS_FAILURE]: (state, { payload: error }) => ({ ...state, error }),\n    [UNLOAD_LIST]: () => initialState,\n  },\n  initialState,\n);\n\nexport default items;\n"]},"metadata":{},"sourceType":"module"}