{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as itemAPI from '../lib/api/items';\nimport { takeLatest } from 'redux-saga/effects';\nconst [LIST_ITEMS, LIST_ITEMS_SUCCESS, LIST_ITEMS_FAILURE] = createRequestActionTypes('list/LIST_ITEMS');\nconst [SEARCH_ITEM, SEARCH_ITEM_SUCCESS, SEARCH_ITEM_FAILURE] = createRequestActionTypes('item/SEARCH_ITEM');\nconst UNLOAD_LIST = 'list/UNLOAD_LIST';\nexport const listItems = createAction(LIST_ITEMS);\nexport const searchItem = createAction(SEARCH_ITEM);\nexport const unloadItems = createAction(UNLOAD_LIST);\nconst listItemsSaga = createRequestSaga(LIST_ITEMS, itemAPI.listItem);\nexport function* listSaga() {\n  yield takeLatest(LIST_ITEMS, listItemsSaga);\n}\nconst searchItemSaga = createRequestSaga(SEARCH_ITEM, itemAPI.searchItem);\nexport function* searchSaga() {\n  yield takeLatest(SEARCH_ITEM, searchItemSaga);\n}\nconst initialState = {\n  items: null,\n  error: null\n};\nconst items = handleActions({\n  [LIST_ITEMS_SUCCESS]: (state, {\n    payload: items\n  }) => ({ ...state,\n    items\n  }),\n  [LIST_ITEMS_FAILURE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  }),\n  [SEARCH_ITEM]: state => ({ ...state,\n    item: null,\n    error: null\n  }),\n  [SEARCH_ITEM_SUCCESS]: (state, {\n    payload: item\n  }) => ({ ...state,\n    item\n  }),\n  [SEARCH_ITEM_FAILURE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  }),\n  [UNLOAD_LIST]: () => initialState\n}, initialState);\nexport default items;","map":{"version":3,"sources":["/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/modules/list.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","itemAPI","takeLatest","LIST_ITEMS","LIST_ITEMS_SUCCESS","LIST_ITEMS_FAILURE","SEARCH_ITEM","SEARCH_ITEM_SUCCESS","SEARCH_ITEM_FAILURE","UNLOAD_LIST","listItems","searchItem","unloadItems","listItemsSaga","listItem","listSaga","searchItemSaga","searchSaga","initialState","items","error","state","payload","item"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAM,CACJC,UADI,EAEJC,kBAFI,EAGJC,kBAHI,IAIFL,wBAAwB,CAAC,iBAAD,CAJ5B;AAKA,MAAM,CACJM,WADI,EAEJC,mBAFI,EAGJC,mBAHI,IAIFR,wBAAwB,CAAC,kBAAD,CAJ5B;AAKA,MAAMS,WAAW,GAAG,kBAApB;AAEA,OAAO,MAAMC,SAAS,GAAGb,YAAY,CAACM,UAAD,CAA9B;AACP,OAAO,MAAMQ,UAAU,GAAGd,YAAY,CAACS,WAAD,CAA/B;AACP,OAAO,MAAMM,WAAW,GAAGf,YAAY,CAACY,WAAD,CAAhC;AAEP,MAAMI,aAAa,GAAGd,iBAAiB,CAACI,UAAD,EAAaF,OAAO,CAACa,QAArB,CAAvC;AACA,OAAO,UAAUC,QAAV,GAAqB;AAC1B,QAAMb,UAAU,CAACC,UAAD,EAAaU,aAAb,CAAhB;AACD;AAED,MAAMG,cAAc,GAAGjB,iBAAiB,CAACO,WAAD,EAAcL,OAAO,CAACU,UAAtB,CAAxC;AACA,OAAO,UAAUM,UAAV,GAAuB;AAC5B,QAAMf,UAAU,CAACI,WAAD,EAAcU,cAAd,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMD,KAAK,GAAGrB,aAAa,CACzB;AACE,GAACM,kBAAD,GAAsB,CAACiB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,MAAgC,EACpD,GAAGE,KADiD;AAEpDF,IAAAA;AAFoD,GAAhC,CADxB;AAKE,GAACd,kBAAD,GAAsB,CAACgB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,MAAgC,EAAE,GAAGC,KAAL;AAAYD,IAAAA;AAAZ,GAAhC,CALxB;AAME,GAACd,WAAD,GAAgBe,KAAD,KAAY,EACzB,GAAGA,KADsB;AAEzBE,IAAAA,IAAI,EAAE,IAFmB;AAGzBH,IAAAA,KAAK,EAAE;AAHkB,GAAZ,CANjB;AAWE,GAACb,mBAAD,GAAuB,CAACc,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAR,MAA+B,EACpD,GAAGF,KADiD;AAEpDE,IAAAA;AAFoD,GAA/B,CAXzB;AAeE,GAACf,mBAAD,GAAuB,CAACa,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,MAAgC,EACrD,GAAGC,KADkD;AAErDD,IAAAA;AAFqD,GAAhC,CAfzB;AAmBE,GAACX,WAAD,GAAe,MAAMS;AAnBvB,CADyB,EAsBzBA,YAtByB,CAA3B;AAyBA,eAAeC,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as itemAPI from '../lib/api/items';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  LIST_ITEMS,\n  LIST_ITEMS_SUCCESS,\n  LIST_ITEMS_FAILURE,\n] = createRequestActionTypes('list/LIST_ITEMS');\nconst [\n  SEARCH_ITEM,\n  SEARCH_ITEM_SUCCESS,\n  SEARCH_ITEM_FAILURE,\n] = createRequestActionTypes('item/SEARCH_ITEM');\nconst UNLOAD_LIST = 'list/UNLOAD_LIST';\n\nexport const listItems = createAction(LIST_ITEMS);\nexport const searchItem = createAction(SEARCH_ITEM);\nexport const unloadItems = createAction(UNLOAD_LIST);\n\nconst listItemsSaga = createRequestSaga(LIST_ITEMS, itemAPI.listItem);\nexport function* listSaga() {\n  yield takeLatest(LIST_ITEMS, listItemsSaga);\n}\n\nconst searchItemSaga = createRequestSaga(SEARCH_ITEM, itemAPI.searchItem);\nexport function* searchSaga() {\n  yield takeLatest(SEARCH_ITEM, searchItemSaga);\n}\n\nconst initialState = {\n  items: null,\n  error: null,\n};\n\nconst items = handleActions(\n  {\n    [LIST_ITEMS_SUCCESS]: (state, { payload: items }) => ({\n      ...state,\n      items,\n    }),\n    [LIST_ITEMS_FAILURE]: (state, { payload: error }) => ({ ...state, error }),\n    [SEARCH_ITEM]: (state) => ({\n      ...state,\n      item: null,\n      error: null,\n    }),\n    [SEARCH_ITEM_SUCCESS]: (state, { payload: item }) => ({\n      ...state,\n      item,\n    }),\n    [SEARCH_ITEM_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [UNLOAD_LIST]: () => initialState,\n  },\n  initialState,\n);\n\nexport default items;\n"]},"metadata":{},"sourceType":"module"}