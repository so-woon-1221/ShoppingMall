{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as loginAPI from '../lib/api/login';\nimport { takeLatest } from 'redux-saga/effects';\nconst INITIALIZE = 'login/INITIALIZE';\nconst CHANGE_FIELD = 'register/CHANGE_FIELD';\nconst [LOGIN_USER, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE] = createRequestActionTypes('login/LOGIN_USER');\nexport const initialize = createAction(INITIALIZE);\nexport const loginUser = createAction(LOGIN_USER, ({\n  email,\n  password\n}) => ({\n  email,\n  password\n}));\nexport const changeField = createAction(CHANGE_FIELD, ({\n  key,\n  value\n}) => ({\n  key,\n  value\n}));\nconst loginUserSaga = createRequestSaga(LOGIN_USER, loginAPI.loginUser);\nexport function* loginSaga() {\n  yield takeLatest(LOGIN_USER, loginUserSaga);\n}\nconst initialState = {\n  email: '',\n  password: '',\n  user: '',\n  userError: null\n};\nconst login = handleActions({\n  [INITIALIZE]: state => initialState,\n  [CHANGE_FIELD]: (state, {\n    payload: {\n      key,\n      value\n    }\n  }) => ({ ...state,\n    [key]: value\n  }),\n  [LOGIN_USER]: state => ({ ...state,\n    user: ''\n  }),\n  [LOGIN_USER_SUCCESS]: (state, {\n    payload: user\n  }) => ({ ...state,\n    user\n  }),\n  [LOGIN_USER_FAILURE]: (state, {\n    payload: userError\n  }) => ({ ...state,\n    userError\n  })\n}, initialState);\nexport default login;","map":{"version":3,"sources":["/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/modules/login.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","loginAPI","takeLatest","INITIALIZE","CHANGE_FIELD","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","initialize","loginUser","email","password","changeField","key","value","loginUserSaga","loginSaga","initialState","user","userError","login","state","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAMC,UAAU,GAAG,kBAAnB;AACA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAM,CACJC,UADI,EAEJC,kBAFI,EAGJC,kBAHI,IAIFP,wBAAwB,CAAC,kBAAD,CAJ5B;AAMA,OAAO,MAAMQ,UAAU,GAAGX,YAAY,CAACM,UAAD,CAA/B;AACP,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACQ,UAAD,EAAa,CAAC;AAAEK,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,MAA0B;AAC1ED,EAAAA,KAD0E;AAE1EC,EAAAA;AAF0E,CAA1B,CAAb,CAA9B;AAIP,OAAO,MAAMC,WAAW,GAAGf,YAAY,CAACO,YAAD,EAAe,CAAC;AAAES,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,MAAqB;AACzED,EAAAA,GADyE;AAEzEC,EAAAA;AAFyE,CAArB,CAAf,CAAhC;AAKP,MAAMC,aAAa,GAAGhB,iBAAiB,CAACM,UAAD,EAAaJ,QAAQ,CAACQ,SAAtB,CAAvC;AACA,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAMd,UAAU,CAACG,UAAD,EAAaU,aAAb,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;AACnBP,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBO,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,MAAMC,KAAK,GAAGtB,aAAa,CACzB;AACE,GAACK,UAAD,GAAekB,KAAD,IAAWJ,YAD3B;AAEE,GAACb,YAAD,GAAgB,CAACiB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAET,MAAAA,GAAF;AAAOC,MAAAA;AAAP;AAAX,GAAR,MAAyC,EACvD,GAAGO,KADoD;AAEvD,KAACR,GAAD,GAAOC;AAFgD,GAAzC,CAFlB;AAME,GAACT,UAAD,GAAegB,KAAD,KAAY,EACxB,GAAGA,KADqB;AAExBH,IAAAA,IAAI,EAAE;AAFkB,GAAZ,CANhB;AAUE,GAACZ,kBAAD,GAAsB,CAACe,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEJ;AAAX,GAAR,MAA+B,EACnD,GAAGG,KADgD;AAEnDH,IAAAA;AAFmD,GAA/B,CAVxB;AAcE,GAACX,kBAAD,GAAsB,CAACc,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,MAAoC,EACxD,GAAGE,KADqD;AAExDF,IAAAA;AAFwD,GAApC;AAdxB,CADyB,EAoBzBF,YApByB,CAA3B;AAuBA,eAAeG,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as loginAPI from '../lib/api/login';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'login/INITIALIZE';\nconst CHANGE_FIELD = 'register/CHANGE_FIELD';\nconst [\n  LOGIN_USER,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILURE,\n] = createRequestActionTypes('login/LOGIN_USER');\n\nexport const initialize = createAction(INITIALIZE);\nexport const loginUser = createAction(LOGIN_USER, ({ email, password }) => ({\n  email,\n  password,\n}));\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\n  key,\n  value,\n}));\n\nconst loginUserSaga = createRequestSaga(LOGIN_USER, loginAPI.loginUser);\nexport function* loginSaga() {\n  yield takeLatest(LOGIN_USER, loginUserSaga);\n}\n\nconst initialState = {\n  email: '',\n  password: '',\n  user: '',\n  userError: null,\n};\n\nconst login = handleActions(\n  {\n    [INITIALIZE]: (state) => initialState,\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\n      ...state,\n      [key]: value,\n    }),\n    [LOGIN_USER]: (state) => ({\n      ...state,\n      user: '',\n    }),\n    [LOGIN_USER_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n    }),\n    [LOGIN_USER_FAILURE]: (state, { payload: userError }) => ({\n      ...state,\n      userError,\n    }),\n  },\n  initialState,\n);\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}