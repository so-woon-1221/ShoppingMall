{"ast":null,"code":"import { call, put, fork } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return function* (action) {\n    yield put(startLoading(type)); //로딩 시작\n\n    try {\n      const response = yield call(request, action.payload);\n      console.log(response);\n      yield put({\n        type: SUCCESS,\n        // payload: action.payload,\n        payload: response.data\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: action.payload,\n        error: true\n      });\n    }\n\n    yield put(finishLoading(type)); //로딩 끝\n  };\n}\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};","map":{"version":3,"sources":["/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/lib/createRequestSaga.js"],"names":["call","put","fork","startLoading","finishLoading","createRequestSaga","type","request","SUCCESS","FAILURE","action","response","payload","console","log","data","e","error","createRequestActionTypes"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AAEA,eAAe,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,OAAjC,EAA0C;AACvD,QAAMC,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,OAAO,GAAI,GAAEH,IAAK,UAAxB;AAEA,SAAO,WAAWI,MAAX,EAAmB;AACxB,UAAMT,GAAG,CAACE,YAAY,CAACG,IAAD,CAAb,CAAT,CADwB,CACO;;AAC/B,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMX,IAAI,CAACO,OAAD,EAAUG,MAAM,CAACE,OAAjB,CAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,YAAMV,GAAG,CAAC;AACRK,QAAAA,IAAI,EAAEE,OADE;AAER;AACAI,QAAAA,OAAO,EAAED,QAAQ,CAACI;AAHV,OAAD,CAAT;AAKD,KARD,CAQE,OAAOC,CAAP,EAAU;AACV,YAAMf,GAAG,CAAC;AACRK,QAAAA,IAAI,EAAEG,OADE;AAERG,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFR;AAGRK,QAAAA,KAAK,EAAE;AAHC,OAAD,CAAT;AAKD;;AACD,UAAMhB,GAAG,CAACG,aAAa,CAACE,IAAD,CAAd,CAAT,CAjBwB,CAiBQ;AACjC,GAlBD;AAmBD;AAED,OAAO,MAAMY,wBAAwB,GAAIZ,IAAD,IAAU;AAChD,QAAME,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,OAAO,GAAI,GAAEH,IAAK,UAAxB;AACA,SAAO,CAACA,IAAD,EAAOE,OAAP,EAAgBC,OAAhB,CAAP;AACD,CAJM","sourcesContent":["import { call, put, fork } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function* (action) {\n    yield put(startLoading(type)); //로딩 시작\n    try {\n      const response = yield call(request, action.payload);\n      console.log(response);\n      yield put({\n        type: SUCCESS,\n        // payload: action.payload,\n        payload: response.data,\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: action.payload,\n        error: true,\n      });\n    }\n    yield put(finishLoading(type)); //로딩 끝\n  };\n}\n\nexport const createRequestActionTypes = (type) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n"]},"metadata":{},"sourceType":"module"}