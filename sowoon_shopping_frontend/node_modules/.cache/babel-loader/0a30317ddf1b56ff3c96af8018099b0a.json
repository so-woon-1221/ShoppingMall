{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as loginAPI from '../lib/api/login';\nimport { takeLatest } from 'redux-saga/effects';\nconst [CART_IN, CART_IN_SUCCESS, CART_IN_FAILURE] = createRequestActionTypes('cart/CART_IN');\nconst [GET_CART, GET_CART_SUCCESS, GET_CART_FAILURE] = createRequestActionTypes('cart/GET_CART');\nexport const cartIn = createAction(CART_IN, ({\n  itemId,\n  user\n}) => ({\n  itemId,\n  user\n}));\nexport const getCart = createAction(GET_CART, user => user);\nconst cartInSaga = createRequestSaga(CART_IN, loginAPI.cartIn);\nexport function* inSaga() {\n  yield takeLatest(CART_IN, cartInSaga);\n}\nconst initialState = {\n  cart: null,\n  error: null\n};\nconst cart = handleActions({\n  [CART_IN]: state => ({ ...state,\n    cart: null,\n    error: null\n  }),\n  [CART_IN_SUCCESS]: (state, {\n    payload: cart\n  }) => ({ ...state,\n    cart\n  }),\n  [CART_IN_FAILURE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  })\n}, initialState);\nexport default cart;","map":{"version":3,"sources":["/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/modules/cart.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","loginAPI","takeLatest","CART_IN","CART_IN_SUCCESS","CART_IN_FAILURE","GET_CART","GET_CART_SUCCESS","GET_CART_FAILURE","cartIn","itemId","user","getCart","cartInSaga","inSaga","initialState","cart","error","state","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAM,CAACC,OAAD,EAAUC,eAAV,EAA2BC,eAA3B,IAA8CL,wBAAwB,CAC1E,cAD0E,CAA5E;AAGA,MAAM,CAACM,QAAD,EAAWC,gBAAX,EAA6BC,gBAA7B,IAAiDR,wBAAwB,CAC7E,eAD6E,CAA/E;AAIA,OAAO,MAAMS,MAAM,GAAGZ,YAAY,CAACM,OAAD,EAAU,CAAC;AAAEO,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,MAAuB;AACjED,EAAAA,MADiE;AAEjEC,EAAAA;AAFiE,CAAvB,CAAV,CAA3B;AAKP,OAAO,MAAMC,OAAO,GAAGf,YAAY,CAACS,QAAD,EAAYK,IAAD,IAAUA,IAArB,CAA5B;AAEP,MAAME,UAAU,GAAGd,iBAAiB,CAACI,OAAD,EAAUF,QAAQ,CAACQ,MAAnB,CAApC;AACA,OAAO,UAAUK,MAAV,GAAmB;AACxB,QAAMZ,UAAU,CAACC,OAAD,EAAUU,UAAV,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMD,IAAI,GAAGlB,aAAa,CACxB;AACE,GAACK,OAAD,GAAYe,KAAD,KAAY,EACrB,GAAGA,KADkB;AAErBF,IAAAA,IAAI,EAAE,IAFe;AAGrBC,IAAAA,KAAK,EAAE;AAHc,GAAZ,CADb;AAME,GAACb,eAAD,GAAmB,CAACc,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,MAA+B,EAAE,GAAGE,KAAL;AAAYF,IAAAA;AAAZ,GAA/B,CANrB;AAOE,GAACX,eAAD,GAAmB,CAACa,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,MAAgC,EAAE,GAAGC,KAAL;AAAYD,IAAAA;AAAZ,GAAhC;AAPrB,CADwB,EAUxBF,YAVwB,CAA1B;AAaA,eAAeC,IAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as loginAPI from '../lib/api/login';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [CART_IN, CART_IN_SUCCESS, CART_IN_FAILURE] = createRequestActionTypes(\n  'cart/CART_IN',\n);\nconst [GET_CART, GET_CART_SUCCESS, GET_CART_FAILURE] = createRequestActionTypes(\n  'cart/GET_CART',\n);\n\nexport const cartIn = createAction(CART_IN, ({ itemId, user }) => ({\n  itemId,\n  user,\n}));\n\nexport const getCart = createAction(GET_CART, (user) => user);\n\nconst cartInSaga = createRequestSaga(CART_IN, loginAPI.cartIn);\nexport function* inSaga() {\n  yield takeLatest(CART_IN, cartInSaga);\n}\n\nconst initialState = {\n  cart: null,\n  error: null,\n};\n\nconst cart = handleActions(\n  {\n    [CART_IN]: (state) => ({\n      ...state,\n      cart: null,\n      error: null,\n    }),\n    [CART_IN_SUCCESS]: (state, { payload: cart }) => ({ ...state, cart }),\n    [CART_IN_FAILURE]: (state, { payload: error }) => ({ ...state, error }),\n  },\n  initialState,\n);\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}