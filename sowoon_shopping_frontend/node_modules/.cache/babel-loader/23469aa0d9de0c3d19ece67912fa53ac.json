{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/container/User/LoginContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize, loginUser } from '../../modules/login';\nimport { withRouter } from 'react-router-dom';\nimport Login from '../../components/indexPage/Login';\n\nconst LoginContainer = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    email,\n    password,\n    user,\n    userError,\n    history\n  } = useSelector(({\n    login\n  }) => ({\n    email: login.email,\n    password: login.password,\n    user: login.user,\n    userError: login.userError\n  }));\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]);\n\n  const onRegister = () => {\n    dispatch(loginUser({\n      email,\n      password\n    }));\n  };\n\n  useEffect(() => {\n    if (user) {\n      console.log(user);\n    }\n\n    return () => {\n      dispatch(initialize());\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      onChangeField: onChangeField,\n      email: email,\n      password: password,\n      onRegister: onRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginContainer, \"5z9/vUeN3rAK1w0DybldZNex9pQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginContainer;\nexport default _c2 = withRouter(LoginContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/container/User/LoginContainer.js"],"names":["React","useCallback","useEffect","useState","useSelector","useDispatch","changeField","initialize","loginUser","withRouter","Login","LoginContainer","dispatch","email","password","user","userError","history","login","onChangeField","payload","onRegister","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,qBAAnD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,kCAAlB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA;AAApC,MAAgDb,WAAW,CAC/D,CAAC;AAAEc,IAAAA;AAAF,GAAD,MAAgB;AACdL,IAAAA,KAAK,EAAEK,KAAK,CAACL,KADC;AAEdC,IAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAFF;AAGdC,IAAAA,IAAI,EAAEG,KAAK,CAACH,IAHE;AAIdC,IAAAA,SAAS,EAAEE,KAAK,CAACF;AAJH,GAAhB,CAD+D,CAAjE;AASA,QAAMG,aAAa,GAAGlB,WAAW,CAC9BmB,OAAD,IAAaR,QAAQ,CAACN,WAAW,CAACc,OAAD,CAAZ,CADU,EAE/B,CAACR,QAAD,CAF+B,CAAjC;;AAKA,QAAMS,UAAU,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CAACJ,SAAS,CAAC;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAV,CAAR;AACD,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,IAAJ,EAAU;AACRO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD;;AACD,WAAO,MAAM;AACXH,MAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACD,KAFD;AAGD,GAPQ,EAON,CAACK,QAAD,CAPM,CAAT;AASA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,aAAa,EAAEO,aADjB;AAEE,MAAA,KAAK,EAAEN,KAFT;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,UAAU,EAAEO;AAJd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAxCD;;GAAMV,c;UACaN,W,EAEqCD,W;;;KAHlDO,c;AA0CN,qBAAeF,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize, loginUser } from '../../modules/login';\nimport { withRouter } from 'react-router-dom';\nimport Login from '../../components/indexPage/Login';\n\nconst LoginContainer = () => {\n  const dispatch = useDispatch();\n\n  const { email, password, user, userError, history } = useSelector(\n    ({ login }) => ({\n      email: login.email,\n      password: login.password,\n      user: login.user,\n      userError: login.userError,\n    }),\n  );\n\n  const onChangeField = useCallback(\n    (payload) => dispatch(changeField(payload)),\n    [dispatch],\n  );\n\n  const onRegister = () => {\n    dispatch(loginUser({ email, password }));\n  };\n\n  useEffect(() => {\n    if (user) {\n      console.log(user);\n    }\n    return () => {\n      dispatch(initialize());\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <Login\n        onChangeField={onChangeField}\n        email={email}\n        password={password}\n        onRegister={onRegister}\n      />\n    </>\n  );\n};\n\nexport default withRouter(LoginContainer);\n"]},"metadata":{},"sourceType":"module"}