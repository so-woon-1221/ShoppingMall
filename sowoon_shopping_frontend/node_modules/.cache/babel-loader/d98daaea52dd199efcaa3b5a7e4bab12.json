{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/container/User/LoginContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize, loginUser } from '../../modules/login';\nimport { withRouter } from 'react-router-dom';\nimport Login from '../../components/indexPage/Login';\n\nconst LoginContainer = ({\n  history\n}) => {\n  _s();\n\n  const [login, setLogin] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    email,\n    password,\n    user,\n    userError\n  } = useSelector(({\n    login\n  }) => ({\n    email: login.email,\n    password: login.password,\n    user: login.user,\n    userError: login.userError\n  }));\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [dispatch]);\n\n  const onRegister = () => {\n    dispatch(loginUser({\n      email,\n      password\n    }));\n  };\n\n  const onConfirm = () => {\n    setLogin(false);\n  };\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n\n      try {\n        sessionStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    } else {\n      setLogin(true);\n    }\n  }, [history, user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      onChangeField: onChangeField,\n      email: email,\n      password: password,\n      onRegister: onRegister,\n      login: login,\n      onConfirm: onConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginContainer, \"92gkXRfA16I4Ql0B+tjzNZY1nIE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginContainer;\nexport default _c2 = withRouter(LoginContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sowoon/Develop/shopping/sowoon_shopping_frontend/src/container/User/LoginContainer.js"],"names":["React","useCallback","useEffect","useState","useSelector","useDispatch","changeField","initialize","loginUser","withRouter","Login","LoginContainer","history","login","setLogin","dispatch","email","password","user","userError","onChangeField","payload","onRegister","onConfirm","push","sessionStorage","setItem","JSON","stringify","e","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,qBAAnD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,kCAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMY,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAAuCf,WAAW,CAAC,CAAC;AAAES,IAAAA;AAAF,GAAD,MAAgB;AACvEG,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAD0D;AAEvEC,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAFuD;AAGvEC,IAAAA,IAAI,EAAEL,KAAK,CAACK,IAH2D;AAIvEC,IAAAA,SAAS,EAAEN,KAAK,CAACM;AAJsD,GAAhB,CAAD,CAAxD;AAOA,QAAMC,aAAa,GAAGnB,WAAW,CAC9BoB,OAAD,IAAaN,QAAQ,CAACT,WAAW,CAACe,OAAD,CAAZ,CADU,EAE/B,CAACN,QAAD,CAF+B,CAAjC;;AAKA,QAAMO,UAAU,GAAG,MAAM;AACvBP,IAAAA,QAAQ,CAACP,SAAS,CAAC;AAAEQ,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAV,CAAR;AACD,GAFD;;AAIA,QAAMM,SAAS,GAAG,MAAM;AACtBT,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,IAAJ,EAAU;AACRN,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;;AACA,UAAI;AACFC,QAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAA/B;AACD,OAFD,CAEE,OAAOW,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF,KAPD,MAOO;AACLjB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAXQ,EAWN,CAACF,OAAD,EAAUM,IAAV,CAXM,CAAT;AAaA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,aAAa,EAAEE,aADjB;AAEE,MAAA,KAAK,EAAEJ,KAFT;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,UAAU,EAAEK,UAJd;AAKE,MAAA,KAAK,EAAET,KALT;AAME,MAAA,SAAS,EAAEU;AANb;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD,CAjDD;;GAAMZ,c;UAEaN,W,EAE4BD,W;;;KAJzCO,c;AAmDN,qBAAeF,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize, loginUser } from '../../modules/login';\nimport { withRouter } from 'react-router-dom';\nimport Login from '../../components/indexPage/Login';\n\nconst LoginContainer = ({ history }) => {\n  const [login, setLogin] = useState(false);\n  const dispatch = useDispatch();\n\n  const { email, password, user, userError } = useSelector(({ login }) => ({\n    email: login.email,\n    password: login.password,\n    user: login.user,\n    userError: login.userError,\n  }));\n\n  const onChangeField = useCallback(\n    (payload) => dispatch(changeField(payload)),\n    [dispatch],\n  );\n\n  const onRegister = () => {\n    dispatch(loginUser({ email, password }));\n  };\n\n  const onConfirm = () => {\n    setLogin(false);\n  };\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n      try {\n        sessionStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    } else {\n      setLogin(true);\n    }\n  }, [history, user]);\n\n  return (\n    <>\n      <Login\n        onChangeField={onChangeField}\n        email={email}\n        password={password}\n        onRegister={onRegister}\n        login={login}\n        onConfirm={onConfirm}\n      />\n    </>\n  );\n};\n\nexport default withRouter(LoginContainer);\n"]},"metadata":{},"sourceType":"module"}